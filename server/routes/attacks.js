const express = require('express');
const router = express.Router();
const { PythonShell } = require('python-shell');

//=================================
//             Attacks
//=================================

router.get('/hostScan', (req, res) => {
  console.log('Host Scan Start')
  var options = {
    mode: 'text',
    pythonPath: '',         // python path
    pythonOptions: ['-u'],  // get print results in real-time
    scriptPath: '\scripts', // window -> '/scripts'  linux -> '\scripts'
    args: []
  };

  PythonShell.run('hostScanner.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});


router.post('/portScan', async (req, res) => {
  console.log('Port Scan Start')
  const target = req.body.IP;

  var options = {
    mode: 'text',
    pythonPath: '',
    pythonOptions: ['-u'], // get print results in real-time
    scriptPath: '\scripts',
    args: [target]
  };

  await PythonShell.run('nmapScan.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});

router.post('/sshLogin', (req, res) => {
  console.log('ssh login')
  const target = req.body.IP;
  const user = req.body.user;
  const pw_list = req.body.data;

  var options = {
    mode: 'text',
    pythonPath: '',
    pythonOptions: ['-u'], // get print results in real-time
    scriptPath: '\scripts',
    args: [target, user, pw_list]
  };

  PythonShell.run('ssh_login.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});

router.post('/ftpLogin', (req, res) => {
  console.log('ftp login')
  const target = req.body.IP;
  const user = req.body.user;
  const pw_list = req.body.data;

  var options = {
    mode: 'text',
    pythonPath: '',
    pythonOptions: ['-u'], // get print results in real-time
    scriptPath: '\scripts',
    args: [target, user, pw_list]
  };

  PythonShell.run('ftp_login.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});

router.post('/telnetLogin', (req, res) => {
  console.log('telnet login')
  const target = req.body.IP;
  const user = req.body.user;
  const pw_list = req.body.data;

  var options = {
    mode: 'text',
    pythonPath: '',
    pythonOptions: ['-u'], // get print results in real-time
    scriptPath: '\scripts',
    args: [target, user, pw_list]
  };

  PythonShell.run('telnet_login.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});

router.post('/sshOrder', (req, res) => {
  console.log('ssh connect')
  const target = req.body.IP;
  const user = req.body.user;
  const pw = req.body.pw;
  const order = req.body.order;

  var options = {
    mode: 'text',
    pythonPath: '',
    pythonOptions: ['-u'], // get print results in real-time
    scriptPath: '\scripts',
    args: [target, user, pw, order]
  };

  PythonShell.run('ssh_connect.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});

router.post('/telnetOrder', (req, res) => {
  console.log('telnet connect')
  const target = req.body.IP;
  const user = req.body.user;
  const pw = req.body.pw;
  const order = req.body.order;

  var options = {
    mode: 'text',
    pythonPath: '',
    pythonOptions: ['-u'], // get print results in real-time
    scriptPath: '\scripts',
    args: [target, user, pw, order]
  };

  PythonShell.run('telnet_connect.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});

router.post('/ftpOrder', (req, res) => {
  console.log('ftp connect')
  const target = req.body.IP;
  const user = req.body.user;
  const pw = req.body.pw;
  const order = req.body.order;

  var options = {
    mode: 'text',
    pythonPath: '',
    pythonOptions: ['-u'], // get print results in real-time
    scriptPath: '\scripts',
    args: [target, user, pw, order]
  };

  PythonShell.run('ftp_connect.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});

router.post('/loadFile', (req, res) => {
  const fs = require('fs');
  const path = require('path');
  console.log('file read')
  
  fs.readdir(path.join(__dirname, '/../scripts/download'), "utf8", function(err, files){
    if (err) {
       res.status(500);
       throw err;
    }
    return res.status(200).json({ success: true, files })
  });
});

router.post('/crackZip', (req, res) => {
  const fileName = req.body.fileName;
  
  var options = {
    mode: 'text',
    pythonPath: '',
    pythonOptions: ['-u'], // get print results in real-time
    scriptPath: '\scripts',
    args: [fileName]
  };

  PythonShell.run('zip_crack.py', options, function (err, results) {
    if (err) throw err;
    return res.status(200).json({ success: true, results })
  });
});

module.exports = router;